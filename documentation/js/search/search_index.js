var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.787,1,0.936]],["body/components/AppComponent.html",[0,1.39,1,1.652,2,1.416,3,0.638,4,0.515,5,2.271,6,2.271,7,2.271,8,2.271,9,0.515,10,2.271,11,2.271,12,3.404,13,3.604,14,2.39,15,2.919,16,4.113,17,2.919,18,3.722,19,0.515,20,1.416,21,4.113,22,0.515,23,0.067,24,0.927,25,1.306,26,1.306,27,1.102,28,2.896,29,0.638,30,1.306,31,0.638,32,0.208,33,1.552,34,2.919,35,2.39,36,2.271,37,3.404,38,2.271,39,1.679,40,2.271,41,1.102,42,2.271,43,2.271,44,2.271,45,0.039,46,0.05,47,0.039]],["title/modules/AppModule.html",[48,1.318,49,1.318]],["body/modules/AppModule.html",[1,1.848,3,0.614,4,0.496,9,0.496,23,0.067,29,1.002,30,1.258,31,0.614,32,0.2,33,1.495,41,1.731,45,0.037,46,0.049,47,0.037,48,1.495,49,2.545,50,1.791,51,1.495,52,3.168,53,3.168,54,2.849,55,2.187,56,2.187,57,2.187,58,2.187,59,2.849,60,1.791,61,2.187,62,2.789,63,3.633,64,2.187,65,1.495,66,3.633,67,2.789,68,2.789,69,1.791,70,2.789,71,2.789,72,1.258,73,1.258,74,3.633,75,2.187,76,1.791,77,2.187,78,2.789,79,2.789]],["title/classes/AppPage.html",[32,0.176,80,1.579]],["body/classes/AppPage.html",[3,0.728,4,0.588,9,0.588,14,2.122,19,0.588,23,0.067,27,1.539,29,0.728,31,0.728,32,0.237,35,2.122,45,0.044,46,0.054,47,0.044,65,1.771,80,2.596,81,2.122,82,2.592,83,1.539,84,4.553,85,4.553,86,3.305,87,1.824,88,3.305,89,3.305,90,1.824,91,3.305,92,3.305,93,3.305]],["title/classes/KeyBinderCore.html",[32,0.176,94,0.657]],["body/classes/KeyBinderCore.html",[2,0.579,3,0.335,4,0.271,9,0.271,19,0.271,20,1.234,22,0.512,23,0.068,25,1.062,26,1.062,27,1.472,29,0.518,31,0.518,32,0.233,39,1.062,45,0.039,46,0.032,47,0.02,72,0.686,73,0.686,81,0.976,83,0.896,87,1.745,90,1.673,94,1.198,95,1.279,96,1.521,97,1.192,98,0.922,99,0.753,100,2.354,101,1.846,102,1.459,103,1.737,104,2.081,105,2.258,106,1.234,107,1.192,108,3.134,109,2.258,110,1.849,111,3.397,112,1.737,113,2.081,114,1.737,115,1.234,116,1.849,117,2.354,118,2.381,119,1.849,120,1.846,121,1.511,122,1.846,123,1.846,124,1.096,125,1.511,126,1.52,127,1.846,128,1.062,129,1.52,130,1.521,131,2.542,132,1.261,133,1.062,134,2.141,135,2.542,136,1.462,137,2.542,138,1.038,139,1.52,140,1.846,141,0.769,142,1.062,143,1.122,144,1.52,145,1.52,146,1.846,147,1.261,148,0.896,149,0.976,150,1.192,151,2.381,152,1.511,153,1.52,154,1.52,155,2.354,156,1.52,157,1.52,158,1.52,159,1.52,160,1.52,161,2.354,162,1.52,163,1.52,164,1.192,165,1.52,166,1.52,167,2.354,168,1.52,169,1.52,170,1.52,171,1.192,172,1.52,173,1.52,174,1.52,175,1.192]],["title/injectables/KeyBinderService.html",[176,1.318,177,1.109]],["body/injectables/KeyBinderService.html",[0,1.14,2,0.758,3,0.271,4,0.7,9,0.219,14,0.79,19,0.219,20,0.954,22,0.742,23,0.068,24,1.469,25,1.131,26,1.131,27,1.561,29,0.552,30,0.555,31,0.438,32,0.243,39,1.427,45,0.017,46,0.027,47,0.017,76,0.79,83,0.758,87,1.933,90,1.427,94,1.131,95,1.14,96,0.468,98,1.313,99,0.394,102,1.505,103,1.909,104,0.79,107,0.965,108,2.259,109,1.561,110,1.278,111,2.909,112,1.344,113,1.61,114,1.344,115,0.954,116,1.61,118,1.61,119,0.79,120,1.966,121,0.79,122,0.965,123,0.965,124,0.904,125,2.031,127,0.965,128,0.555,130,1.288,131,2.259,132,1.695,133,1.427,134,1.814,135,1.561,136,0.898,137,1.561,138,1.14,140,0.965,141,0.991,142,0.555,143,0.637,146,0.965,147,1.344,148,0.758,149,0.79,151,2.031,152,2.46,176,1.067,177,1.974,178,1.231,179,0.965,180,1.991,181,1.067,182,1.991,183,0.898,184,2.507,185,2.259,186,1.561,187,2.259,188,1.966,189,1.561,190,1.231,191,1.231,192,2.881,193,1.991,194,1.231,195,1.991,196,1.231,197,1.561,198,1.991,199,1.991,200,1.231,201,1.356,202,1.231,203,2.654,204,1.991,205,1.561,206,1.991,207,1.991,208,1.991,209,1.991,210,1.991,211,1.231,212,1.991,213,3.385,214,1.231,215,1.231,216,1.231,217,1.231,218,1.231,219,1.231,220,1.231,221,1.231,222,1.231,223,1.231,224,1.231,225,1.231,226,1.231,227,1.231,228,1.231,229,1.231,230,1.231,231,1.231,232,1.231,233,1.231]],["title/interfaces/KeyMapper.html",[106,0.936,234,0.787]],["body/interfaces/KeyMapper.html",[3,0.538,4,0.673,9,0.435,19,0.435,22,0.673,23,0.068,24,1.402,27,1.439,29,0.538,31,0.965,32,0.239,39,1.5,45,0.033,46,0.045,47,0.033,83,1.265,87,1.706,94,1.198,95,1.299,96,0.929,98,1.064,99,0.782,102,1.359,106,1.439,112,1.782,114,1.782,115,1.545,124,1.219,128,1.5,130,1.265,132,1.782,133,1.5,134,1.782,136,1.5,138,0.782,141,0.653,142,1.5,143,1.064,148,1.265,181,2.175,183,1.102,201,0.929,234,1.497,235,1.309,236,2.135,237,2.442,238,2.442,239,2.442,240,2.135,241,2.135,242,1.568]],["title/interfaces/KeyMapperData.html",[124,0.657,234,0.787]],["body/interfaces/KeyMapperData.html",[3,0.537,4,0.779,9,0.434,19,0.434,20,1.263,22,0.832,23,0.068,24,1.542,29,0.537,31,0.964,32,0.175,45,0.033,46,0.045,47,0.033,94,1.083,95,0.78,96,0.927,98,1.358,99,0.78,102,1.48,106,1.263,115,0.927,124,1.134,128,1.099,130,0.927,133,1.829,136,1.703,138,1.298,141,1.009,142,1.099,143,1.063,148,0.927,181,2.173,183,1.099,201,1.543,234,1.497,235,1.306,236,1.564,240,2.424,241,2.424,242,1.564]],["title/interfaces/KeyRemoverData.html",[143,0.787,234,0.787]],["body/interfaces/KeyRemoverData.html",[3,0.578,4,0.796,9,0.467,19,0.467,20,1.328,22,0.698,23,0.068,24,1.518,29,0.578,31,0.985,32,0.188,45,0.035,46,0.047,47,0.035,94,1.117,95,0.84,96,0.999,98,1.117,99,0.84,102,1.503,106,1.328,115,0.999,124,1.117,128,1.184,130,0.999,136,1.769,138,0.84,141,0.701,142,1.184,143,1.255,148,0.999,181,2.24,183,1.184,201,0.999,234,1.518,235,1.407,236,1.686,240,2.518,241,2.518,242,2.241]],["title/components/SampleComponentComponent.html",[0,0.787,41,0.936]],["body/components/SampleComponentComponent.html",[0,1.225,1,0.51,2,0.811,3,0.295,4,0.472,5,1.051,6,1.051,7,1.051,8,1.051,9,0.238,11,1.051,12,2.372,13,2.372,15,1.671,17,1.671,19,0.238,20,0.811,22,0.656,23,0.068,24,0.429,25,1.489,26,1.197,27,1.538,29,0.666,30,0.604,31,0.295,32,0.096,33,0.718,34,1.671,35,1.368,36,1.051,37,2.372,38,1.051,39,1.365,40,1.051,41,1.538,42,3.001,43,1.051,44,1.051,45,0.036,46,0.029,47,0.018,60,2.258,69,2.649,72,0.604,73,0.604,83,0.811,87,1.586,90,0.604,95,0.682,98,0.682,102,1.344,103,1.142,105,1.671,116,0.86,119,0.86,124,0.358,125,1.704,130,1.01,132,1.142,133,0.962,134,1.142,138,0.682,141,0.57,147,1.142,148,1.403,149,0.86,150,1.051,151,1.942,152,0.86,171,1.671,175,2.372,177,1.365,201,0.811,203,1.051,205,2.372,243,3.235,244,1.051,245,2.654,246,2.654,247,2.131,248,2.654,249,3.025,250,2.654,251,2.654,252,2.757,253,3.025,254,3.025,255,1.34,256,2.131,257,2.131,258,1.34,259,2.131,260,2.131,261,3.302,262,2.131,263,1.34,264,2.654,265,1.34,266,2.654,267,1.34,268,1.34,269,2.131,270,3.025,271,1.34,272,1.34,273,3.025,274,3.025,275,3.025,276,3.025,277,3.025,278,1.34,279,1.34,280,1.34,281,3.827,282,1.34,283,1.34,284,1.34,285,1.34,286,2.131,287,1.34,288,1.34,289,2.131,290,1.34,291,1.34,292,1.34,293,1.34,294,1.051,295,2.131,296,1.34,297,1.34,298,2.131,299,1.34,300,1.34,301,3.687,302,3.025,303,1.34,304,1.34,305,2.131,306,2.131,307,3.025,308,2.131,309,2.131,310,1.671,311,2.131,312,1.34,313,1.34,314,2.131,315,2.654,316,1.34,317,1.34,318,1.34,319,1.34,320,1.34]],["title/coverage.html",[321,2.619]],["body/coverage.html",[0,1.189,1,1.099,9,0.514,10,2.264,22,0.514,23,0.066,32,0.267,41,1.099,45,0.039,46,0.05,47,0.039,69,1.854,80,1.854,82,2.264,94,0.772,95,1.436,96,1.099,97,2.264,106,1.099,118,1.854,124,0.772,143,0.924,176,1.547,177,1.303,179,2.264,234,1.315,235,2.201,243,2.264,244,2.264,321,2.264,322,2.264,323,2.887,324,2.887,325,4.593,326,2.887,327,2.887,328,2.887,329,2.887,330,2.887,331,2.887,332,2.887,333,2.887,334,2.887,335,2.887,336,2.887,337,2.887,338,2.887,339,2.887,340,2.264,341,3.401,342,2.913,343,4.337,344,2.264,345,2.913,346,2.264,347,2.264,348,2.887,349,2.887]],["title/dependencies.html",[51,1.582,350,2.061]],["body/dependencies.html",[23,0.067,30,1.457,45,0.043,46,0.053,47,0.043,51,1.73,64,3.126,65,2.136,72,1.457,73,1.457,75,2.532,76,2.073,77,2.532,99,1.034,351,3.229,352,4.876,353,3.229,354,3.229,355,3.229,356,3.229,357,3.229,358,3.229,359,3.229,360,3.229,361,3.229,362,3.229,363,3.229,364,3.229,365,3.229,366,3.229,367,3.229,368,3.229]],["title/index.html",[19,0.367,369,2.061,370,2.061]],["body/index.html",[0,0.818,2,0.973,4,0.455,22,0.61,23,0.055,24,1.324,32,0.184,45,0.034,46,0.046,47,0.034,48,1.37,72,1.153,73,1.153,83,1.726,90,1.153,94,0.916,98,0.818,99,1.381,101,2.69,102,1.381,103,2.216,104,2.769,110,2.202,112,1.37,113,1.642,114,1.37,115,0.973,121,1.642,138,0.818,141,0.683,147,1.37,177,1.547,185,2.005,186,2.005,187,2.005,188,2.005,189,2.005,197,2.69,201,0.973,252,2.005,310,2.005,322,2.005,341,2.005,371,2.557,372,2.557,373,2.557,374,3.43,375,3.43,376,2.557,377,2.557,378,2.557,379,2.557,380,2.557,381,2.557,382,3.87,383,2.557,384,2.557,385,2.557,386,2.557,387,2.557,388,2.557,389,2.557,390,2.557,391,3.43,392,2.69,393,2.557,394,2.557,395,2.557,396,2.557,397,2.557,398,2.557,399,2.557,400,2.557,401,2.557,402,2.557,403,2.557,404,2.557,405,2.557,406,2.557,407,2.557,408,2.557,409,2.557,410,2.557,411,2.557,412,2.557,413,2.557,414,2.557,415,2.557,416,2.557,417,2.557,418,3.43,419,2.557,420,2.557,421,2.557,422,2.557,423,2.557,424,2.557,425,2.557]],["title/modules.html",[50,2.145]],["body/modules.html",[23,0.059,45,0.051,46,0.059,47,0.051,49,2.047,50,2.452,65,2.047,392,2.995,426,3.819,427,3.819]],["title/overview.html",[428,2.619]],["body/overview.html",[1,1.832,2,1.262,23,0.063,33,1.777,41,1.665,45,0.044,46,0.054,47,0.044,48,2.172,49,2.58,51,1.777,52,2.601,53,2.601,54,2.601,55,2.601,56,2.601,57,2.601,58,2.601,59,3.178,60,2.129,61,2.601,81,2.129,164,3.178,176,1.777,183,1.496,428,2.601,429,4.052,430,3.316]],["title/miscellaneous/variables.html",[431,1.616,432,2.316]],["body/miscellaneous/variables.html",[19,0.588,22,0.777,23,0.067,25,1.971,26,1.971,45,0.044,46,0.054,47,0.044,141,1.081,294,2.592,340,2.592,342,3.57,344,2.592,345,2.592,346,3.171,347,3.171,431,2.592,432,2.592,433,4.044,434,3.305,435,3.305,436,3.305,437,4.044,438,3.305,439,4.044]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"interfaces/KeyMapper.html":{},"interfaces/KeyMapperData.html":{},"interfaces/KeyRemoverData.html":{},"components/SampleComponentComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":325,"title":{},"body":{"coverage.html":{}}}],["0.8.26",{"_index":368,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":343,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":327,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":326,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":164,"title":{},"body":{"classes/KeyBinderCore.html":{},"overview.html":{}}}],["1/3",{"_index":339,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":335,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":337,"title":{},"body":{"coverage.html":{}}}],["12/13",{"_index":333,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":336,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":429,"title":{},"body":{"overview.html":{}}}],["2.1.4",{"_index":359,"title":{},"body":{"dependencies.html":{}}}],["2.4.0",{"_index":364,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":361,"title":{},"body":{"dependencies.html":{}}}],["25",{"_index":334,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":430,"title":{},"body":{"overview.html":{}}}],["33",{"_index":338,"title":{},"body":{"coverage.html":{}}}],["36",{"_index":328,"title":{},"body":{"coverage.html":{}}}],["4.17.1",{"_index":363,"title":{},"body":{"dependencies.html":{}}}],["4/11",{"_index":329,"title":{},"body":{"coverage.html":{}}}],["6.0.3",{"_index":352,"title":{},"body":{"dependencies.html":{}}}],["6.4.0",{"_index":366,"title":{},"body":{"dependencies.html":{}}}],["7/8",{"_index":331,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":330,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":332,"title":{},"body":{"coverage.html":{}}}],["_hotkeysservice",{"_index":109,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{}}}],["action",{"_index":248,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["actions",{"_index":395,"title":{},"body":{"index.html":{}}}],["actual_component",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/SampleComponentComponent.html":{}}}],["although",{"_index":397,"title":{},"body":{"index.html":{}}}],["angular",{"_index":182,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["angular/animations",{"_index":351,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":353,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":354,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/KeyBinderService.html":{},"components/SampleComponentComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":355,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":356,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":358,"title":{},"body":{"dependencies.html":{}}}],["angular2",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"classes/KeyBinderCore.html":{},"components/SampleComponentComponent.html":{},"dependencies.html":{},"index.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/SampleComponentComponent.html":{}}}],["app.component",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/SampleComponentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":383,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":49,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":80,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["architecture",{"_index":372,"title":{},"body":{"index.html":{}}}],["array",{"_index":125,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"components/SampleComponentComponent.html":{}}}],["array.from(new",{"_index":168,"title":{},"body":{"classes/KeyBinderCore.html":{}}}],["assign",{"_index":252,"title":{},"body":{"components/SampleComponentComponent.html":{},"index.html":{}}}],["b",{"_index":273,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["below",{"_index":310,"title":{},"body":{"components/SampleComponentComponent.html":{},"index.html":{}}}],["bind",{"_index":112,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"interfaces/KeyMapper.html":{},"index.html":{}}}],["bind(data",{"_index":128,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"interfaces/KeyMapper.html":{},"interfaces/KeyMapperData.html":{},"interfaces/KeyRemoverData.html":{}}}],["binder",{"_index":96,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"interfaces/KeyMapper.html":{},"interfaces/KeyMapperData.html":{},"interfaces/KeyRemoverData.html":{},"coverage.html":{}}}],["binder.service",{"_index":279,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["binder.service.ts",{"_index":179,"title":{},"body":{"injectables/KeyBinderService.html":{},"coverage.html":{}}}],["binder.service.ts:15",{"_index":190,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["binder.service.ts:32",{"_index":202,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["binder.service.ts:46",{"_index":211,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["binder.service.ts:61",{"_index":194,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["binder.service.ts:71",{"_index":191,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["binder.service.ts:85",{"_index":196,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["binding",{"_index":103,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"components/SampleComponentComponent.html":{},"index.html":{}}}],["bindings",{"_index":147,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"components/SampleComponentComponent.html":{},"index.html":{}}}],["blaze.github.io/ng",{"_index":412,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":264,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["bootstrap",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["browse",{"_index":427,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get",{"_index":91,"title":{},"body":{"classes/AppPage.html":{}}}],["browsermodule",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["calibri",{"_index":317,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["call",{"_index":379,"title":{},"body":{"index.html":{}}}],["callback",{"_index":205,"title":{},"body":{"injectables/KeyBinderService.html":{},"components/SampleComponentComponent.html":{}}}],["callback(data",{"_index":262,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["change",{"_index":387,"title":{},"body":{"index.html":{}}}],["changed",{"_index":122,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{}}}],["class",{"_index":32,"title":{"classes/AppPage.html":{},"classes/KeyBinderCore.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"interfaces/KeyMapper.html":{},"interfaces/KeyMapperData.html":{},"interfaces/KeyRemoverData.html":{},"components/SampleComponentComponent.html":{},"coverage.html":{},"index.html":{}}}],["class's",{"_index":386,"title":{},"body":{"index.html":{}}}],["classes",{"_index":81,"title":{},"body":{"classes/AppPage.html":{},"classes/KeyBinderCore.html":{},"overview.html":{}}}],["clone",{"_index":416,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/SampleComponentComponent.html":{}},"body":{"components/AppComponent.html":{},"injectables/KeyBinderService.html":{},"components/SampleComponentComponent.html":{},"coverage.html":{},"index.html":{}}}],["component.component",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["component.component.css",{"_index":246,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["component.component.html",{"_index":247,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["component.component.ts",{"_index":244,"title":{},"body":{"components/SampleComponentComponent.html":{},"coverage.html":{}}}],["component.component.ts:13",{"_index":271,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["component.component.ts:14",{"_index":278,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["component.component.ts:15",{"_index":272,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["component.component.ts:16",{"_index":256,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["component.component.ts:22",{"_index":267,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["component.component.ts:33",{"_index":263,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["component.component.ts:44",{"_index":265,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["component.component.ts:54",{"_index":268,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["component.component.ts:66",{"_index":258,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["component/sample",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"components/SampleComponentComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/SampleComponentComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"components/SampleComponentComponent.html":{},"index.html":{},"overview.html":{}}}],["components.map((v",{"_index":170,"title":{},"body":{"classes/KeyBinderCore.html":{}}}],["components/sample",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["considered",{"_index":396,"title":{},"body":{"index.html":{}}}],["console.log(`registering",{"_index":153,"title":{},"body":{"classes/KeyBinderCore.html":{}}}],["const",{"_index":167,"title":{},"body":{"classes/KeyBinderCore.html":{}}}],["constructor",{"_index":116,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"components/SampleComponentComponent.html":{}}}],["constructor(keyboardmapper",{"_index":255,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["constructor(private",{"_index":280,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["contain",{"_index":135,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{}}}],["context",{"_index":346,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["core",{"_index":99,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"interfaces/KeyMapper.html":{},"interfaces/KeyMapperData.html":{},"interfaces/KeyRemoverData.html":{},"dependencies.html":{},"index.html":{}}}],["core.ts",{"_index":97,"title":{},"body":{"classes/KeyBinderCore.html":{},"coverage.html":{}}}],["core.ts:18",{"_index":126,"title":{},"body":{"classes/KeyBinderCore.html":{}}}],["core.ts:26",{"_index":117,"title":{},"body":{"classes/KeyBinderCore.html":{}}}],["core.ts:38",{"_index":129,"title":{},"body":{"classes/KeyBinderCore.html":{}}}],["core.ts:52",{"_index":144,"title":{},"body":{"classes/KeyBinderCore.html":{}}}],["core.ts:67",{"_index":145,"title":{},"body":{"classes/KeyBinderCore.html":{}}}],["core.ts:78",{"_index":139,"title":{},"body":{"classes/KeyBinderCore.html":{}}}],["coverage",{"_index":321,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["current",{"_index":390,"title":{},"body":{"index.html":{}}}],["custom",{"_index":198,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["d",{"_index":274,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["data",{"_index":134,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"interfaces/KeyMapper.html":{},"components/SampleComponentComponent.html":{}}}],["data.foreach((element",{"_index":223,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["data.key",{"_index":154,"title":{},"body":{"classes/KeyBinderCore.html":{}}}],["data.listener",{"_index":158,"title":{},"body":{"classes/KeyBinderCore.html":{}}}],["data.source",{"_index":155,"title":{},"body":{"classes/KeyBinderCore.html":{}}}],["data['key",{"_index":290,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["declarations",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"components/SampleComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"interfaces/KeyMapper.html":{},"components/SampleComponentComponent.html":{}}}],["definitions",{"_index":236,"title":{},"body":{"interfaces/KeyMapper.html":{},"interfaces/KeyMapperData.html":{},"interfaces/KeyRemoverData.html":{}}}],["demo",{"_index":409,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":51,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":98,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"interfaces/KeyMapper.html":{},"interfaces/KeyMapperData.html":{},"interfaces/KeyRemoverData.html":{},"components/SampleComponentComponent.html":{},"index.html":{}}}],["destroy",{"_index":269,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["destroyalleventlisnteners",{"_index":185,"title":{},"body":{"injectables/KeyBinderService.html":{},"index.html":{}}}],["destroykeyeventlistener",{"_index":186,"title":{},"body":{"injectables/KeyBinderService.html":{},"index.html":{}}}],["destroykeyeventlistener(key",{"_index":193,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["directive",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/SampleComponentComponent.html":{}}}],["directives",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/SampleComponentComponent.html":{}}}],["documentation",{"_index":322,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/SampleComponentComponent.html":{}}}],["dynamic",{"_index":357,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":275,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["e2e/src/app.po.ts",{"_index":82,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":88,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":86,"title":{},"body":{"classes/AppPage.html":{}}}],["element",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/SampleComponentComponent.html":{}}}],["element(by.css('app",{"_index":92,"title":{},"body":{"classes/AppPage.html":{}}}],["element.description",{"_index":229,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["element.key",{"_index":226,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["element.listener",{"_index":227,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["element.options",{"_index":228,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["element.type",{"_index":225,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["environment",{"_index":342,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["etc",{"_index":232,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["eventlisteners",{"_index":208,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["example",{"_index":107,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{}}}],["execute",{"_index":418,"title":{},"body":{"index.html":{}}}],["export",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"interfaces/KeyMapper.html":{},"interfaces/KeyMapperData.html":{},"interfaces/KeyRemoverData.html":{},"components/SampleComponentComponent.html":{}}}],["exports",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["exposed",{"_index":377,"title":{},"body":{"index.html":{}}}],["exposes",{"_index":374,"title":{},"body":{"index.html":{}}}],["express",{"_index":362,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":184,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["false",{"_index":294,"title":{},"body":{"components/SampleComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":313,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["fetch",{"_index":404,"title":{},"body":{"index.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"interfaces/KeyMapper.html":{},"interfaces/KeyMapperData.html":{},"interfaces/KeyRemoverData.html":{},"components/SampleComponentComponent.html":{},"coverage.html":{}}}],["following",{"_index":378,"title":{},"body":{"index.html":{}}}],["font",{"_index":312,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["format",{"_index":408,"title":{},"body":{"index.html":{}}}],["g",{"_index":276,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["getall",{"_index":113,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"index.html":{}}}],["getallshortcuts",{"_index":187,"title":{},"body":{"injectables/KeyBinderService.html":{},"index.html":{}}}],["getkeys",{"_index":253,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["getparagraphtext",{"_index":84,"title":{},"body":{"classes/AppPage.html":{}}}],["getting",{"_index":369,"title":{"index.html":{}},"body":{}}],["gill",{"_index":314,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["h1')).gettext",{"_index":93,"title":{},"body":{"classes/AppPage.html":{}}}],["hit",{"_index":309,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["holds",{"_index":373,"title":{},"body":{"index.html":{}}}],["hotkey",{"_index":150,"title":{},"body":{"classes/KeyBinderCore.html":{},"components/SampleComponentComponent.html":{}}}],["hotkey(data.key",{"_index":157,"title":{},"body":{"classes/KeyBinderCore.html":{}}}],["hotkeymodule",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["hotkeymodule.forroot",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["hotkeys",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"classes/KeyBinderCore.html":{},"components/SampleComponentComponent.html":{},"dependencies.html":{},"index.html":{}}}],["hotkeysservice",{"_index":119,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"components/SampleComponentComponent.html":{}}}],["html",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/SampleComponentComponent.html":{}}}],["http://localhost:4200",{"_index":425,"title":{},"body":{"index.html":{}}}],["https://dark",{"_index":411,"title":{},"body":{"index.html":{}}}],["https://keybinder.herokuapp.com",{"_index":410,"title":{},"body":{"index.html":{}}}],["i.key",{"_index":162,"title":{},"body":{"classes/KeyBinderCore.html":{}}}],["i.source",{"_index":161,"title":{},"body":{"classes/KeyBinderCore.html":{}}}],["identifier",{"_index":323,"title":{},"body":{"coverage.html":{}}}],["implementing",{"_index":100,"title":{},"body":{"classes/KeyBinderCore.html":{}}}],["implements",{"_index":105,"title":{},"body":{"classes/KeyBinderCore.html":{},"components/SampleComponentComponent.html":{}}}],["import",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"interfaces/KeyMapper.html":{},"interfaces/KeyMapperData.html":{},"interfaces/KeyRemoverData.html":{},"components/SampleComponentComponent.html":{}}}],["imports",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"interfaces/KeyMapper.html":{},"interfaces/KeyMapperData.html":{},"interfaces/KeyRemoverData.html":{},"components/SampleComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["indexof(data.key",{"_index":163,"title":{},"body":{"classes/KeyBinderCore.html":{}}}],["individual",{"_index":241,"title":{},"body":{"interfaces/KeyMapper.html":{},"interfaces/KeyMapperData.html":{},"interfaces/KeyRemoverData.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"interfaces/KeyMapper.html":{},"interfaces/KeyMapperData.html":{},"interfaces/KeyRemoverData.html":{},"components/SampleComponentComponent.html":{}}}],["inherited",{"_index":213,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["injectable",{"_index":176,"title":{"injectables/KeyBinderService.html":{}},"body":{"injectables/KeyBinderService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":178,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["inside",{"_index":292,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["install",{"_index":421,"title":{},"body":{"index.html":{}}}],["instance",{"_index":120,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{}}}],["interface",{"_index":234,"title":{"interfaces/KeyMapper.html":{},"interfaces/KeyMapperData.html":{},"interfaces/KeyRemoverData.html":{}},"body":{"interfaces/KeyMapper.html":{},"interfaces/KeyMapperData.html":{},"interfaces/KeyRemoverData.html":{},"coverage.html":{}}}],["interfaces",{"_index":183,"title":{},"body":{"injectables/KeyBinderService.html":{},"interfaces/KeyMapper.html":{},"interfaces/KeyMapperData.html":{},"interfaces/KeyRemoverData.html":{},"overview.html":{}}}],["interfacing",{"_index":101,"title":{},"body":{"classes/KeyBinderCore.html":{},"index.html":{}}}],["internally",{"_index":381,"title":{},"body":{"index.html":{}}}],["it's",{"_index":137,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{}}}],["javascript",{"_index":382,"title":{},"body":{"index.html":{}}}],["js",{"_index":360,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"injectables/KeyBinderService.html":{},"dependencies.html":{}}}],["k",{"_index":171,"title":{},"body":{"classes/KeyBinderCore.html":{},"components/SampleComponentComponent.html":{}}}],["key",{"_index":102,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"interfaces/KeyMapper.html":{},"interfaces/KeyMapperData.html":{},"interfaces/KeyRemoverData.html":{},"components/SampleComponentComponent.html":{},"index.html":{}}}],["key.source",{"_index":174,"title":{},"body":{"classes/KeyBinderCore.html":{}}}],["keybindercore",{"_index":94,"title":{"classes/KeyBinderCore.html":{}},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"interfaces/KeyMapper.html":{},"interfaces/KeyMapperData.html":{},"interfaces/KeyRemoverData.html":{},"coverage.html":{},"index.html":{}}}],["keybindercore:18",{"_index":219,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["keybindercore:26",{"_index":218,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["keybindercore:38",{"_index":214,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["keybindercore:52",{"_index":216,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["keybindercore:67",{"_index":217,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["keybindercore:78",{"_index":215,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["keybinderservice",{"_index":177,"title":{"injectables/KeyBinderService.html":{}},"body":{"injectables/KeyBinderService.html":{},"components/SampleComponentComponent.html":{},"coverage.html":{},"index.html":{}}}],["keyboard",{"_index":406,"title":{},"body":{"index.html":{}}}],["keyboardmapper",{"_index":257,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["keycallbacksample",{"_index":249,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["keydown",{"_index":301,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["keymap",{"_index":250,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["keymapper",{"_index":106,"title":{"interfaces/KeyMapper.html":{}},"body":{"classes/KeyBinderCore.html":{},"interfaces/KeyMapper.html":{},"interfaces/KeyMapperData.html":{},"interfaces/KeyRemoverData.html":{},"coverage.html":{}}}],["keymapperdata",{"_index":124,"title":{"interfaces/KeyMapperData.html":{}},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"interfaces/KeyMapper.html":{},"interfaces/KeyMapperData.html":{},"interfaces/KeyRemoverData.html":{},"components/SampleComponentComponent.html":{},"coverage.html":{}}}],["keypress",{"_index":121,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"index.html":{}}}],["keyremoverdata",{"_index":143,"title":{"interfaces/KeyRemoverData.html":{}},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"interfaces/KeyMapper.html":{},"interfaces/KeyMapperData.html":{},"interfaces/KeyRemoverData.html":{},"coverage.html":{}}}],["keys",{"_index":307,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["layer",{"_index":398,"title":{},"body":{"index.html":{}}}],["legend",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/SampleComponentComponent.html":{},"overview.html":{}}}],["length",{"_index":288,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["level",{"_index":376,"title":{},"body":{"index.html":{}}}],["libraries",{"_index":380,"title":{},"body":{"index.html":{}}}],["library",{"_index":104,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"index.html":{}}}],["line",{"_index":286,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["listener",{"_index":138,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"interfaces/KeyMapper.html":{},"interfaces/KeyMapperData.html":{},"interfaces/KeyRemoverData.html":{},"components/SampleComponentComponent.html":{},"index.html":{}}}],["listeners",{"_index":261,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["locally",{"_index":415,"title":{},"body":{"index.html":{}}}],["m",{"_index":277,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["maintains",{"_index":405,"title":{},"body":{"index.html":{}}}],["map",{"_index":266,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["mapper",{"_index":149,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"components/SampleComponentComponent.html":{}}}],["mapper.ts",{"_index":235,"title":{},"body":{"interfaces/KeyMapper.html":{},"interfaces/KeyMapperData.html":{},"interfaces/KeyRemoverData.html":{},"coverage.html":{}}}],["mapper.ts:11",{"_index":237,"title":{},"body":{"interfaces/KeyMapper.html":{}}}],["mapper.ts:12",{"_index":238,"title":{},"body":{"interfaces/KeyMapper.html":{}}}],["mapper.ts:13",{"_index":239,"title":{},"body":{"interfaces/KeyMapper.html":{}}}],["mapping",{"_index":136,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"interfaces/KeyMapper.html":{},"interfaces/KeyMapperData.html":{},"interfaces/KeyRemoverData.html":{}}}],["mappings",{"_index":407,"title":{},"body":{"index.html":{}}}],["maps",{"_index":140,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{}}}],["matching",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"interfaces/KeyMapper.html":{},"interfaces/KeyMapperData.html":{},"interfaces/KeyRemoverData.html":{},"components/SampleComponentComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":287,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["memberof",{"_index":151,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"components/SampleComponentComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/SampleComponentComponent.html":{}}}],["method",{"_index":130,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"interfaces/KeyMapper.html":{},"interfaces/KeyMapperData.html":{},"interfaces/KeyRemoverData.html":{},"components/SampleComponentComponent.html":{}}}],["methods",{"_index":83,"title":{},"body":{"classes/AppPage.html":{},"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"interfaces/KeyMapper.html":{},"components/SampleComponentComponent.html":{},"index.html":{}}}],["minimal",{"_index":403,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":431,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["module",{"_index":48,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":50,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["ms",{"_index":319,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["mt",{"_index":316,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["multiple",{"_index":260,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["name",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"interfaces/KeyMapper.html":{},"components/SampleComponentComponent.html":{}}}],["navigateto",{"_index":85,"title":{},"body":{"classes/AppPage.html":{}}}],["need",{"_index":388,"title":{},"body":{"index.html":{}}}],["new",{"_index":118,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"coverage.html":{}}}],["next",{"_index":285,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["ng",{"_index":422,"title":{},"body":{"index.html":{}}}],["ngkeypresswp",{"_index":371,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":254,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["ngx",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngxjsonviewermodule",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["npm",{"_index":419,"title":{},"body":{"index.html":{}}}],["object",{"_index":141,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"interfaces/KeyMapper.html":{},"interfaces/KeyMapperData.html":{},"interfaces/KeyRemoverData.html":{},"components/SampleComponentComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["objects",{"_index":199,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["oninit",{"_index":245,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["open",{"_index":424,"title":{},"body":{"index.html":{}}}],["optional",{"_index":133,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"interfaces/KeyMapper.html":{},"interfaces/KeyMapperData.html":{},"components/SampleComponentComponent.html":{}}}],["options",{"_index":201,"title":{},"body":{"injectables/KeyBinderService.html":{},"interfaces/KeyMapper.html":{},"interfaces/KeyMapperData.html":{},"interfaces/KeyRemoverData.html":{},"components/SampleComponentComponent.html":{},"index.html":{}}}],["originates",{"_index":204,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["out",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["overview",{"_index":428,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":350,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":152,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"components/SampleComponentComponent.html":{}}}],["parameters",{"_index":132,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"interfaces/KeyMapper.html":{},"components/SampleComponentComponent.html":{}}}],["pass",{"_index":399,"title":{},"body":{"index.html":{}}}],["point",{"_index":123,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{}}}],["press",{"_index":206,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["pressed",{"_index":270,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["private",{"_index":108,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{}}}],["production",{"_index":439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":417,"title":{},"body":{"index.html":{}}}],["properties",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"interfaces/KeyMapperData.html":{},"interfaces/KeyRemoverData.html":{},"components/SampleComponentComponent.html":{}}}],["propogated",{"_index":291,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["protractor",{"_index":89,"title":{},"body":{"classes/AppPage.html":{}}}],["provided",{"_index":384,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":220,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["providers",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["provides",{"_index":181,"title":{},"body":{"injectables/KeyBinderService.html":{},"interfaces/KeyMapper.html":{},"interfaces/KeyMapperData.html":{},"interfaces/KeyRemoverData.html":{}}}],["public",{"_index":111,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{}}}],["random",{"_index":305,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["registered",{"_index":308,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["registeredkeys",{"_index":251,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["remove",{"_index":146,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{}}}],["removed",{"_index":242,"title":{},"body":{"interfaces/KeyMapper.html":{},"interfaces/KeyMapperData.html":{},"interfaces/KeyRemoverData.html":{}}}],["removes",{"_index":192,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["require",{"_index":347,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"components/SampleComponentComponent.html":{},"overview.html":{}}}],["result",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"interfaces/KeyMapper.html":{},"interfaces/KeyMapperData.html":{},"interfaces/KeyRemoverData.html":{},"components/SampleComponentComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result[v",{"_index":172,"title":{},"body":{"classes/KeyBinderCore.html":{}}}],["results",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"interfaces/KeyMapper.html":{},"interfaces/KeyMapperData.html":{},"interfaces/KeyRemoverData.html":{},"components/SampleComponentComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":90,"title":{},"body":{"classes/AppPage.html":{},"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"components/SampleComponentComponent.html":{},"index.html":{}}}],["returns",{"_index":87,"title":{},"body":{"classes/AppPage.html":{},"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"interfaces/KeyMapper.html":{},"components/SampleComponentComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/KeyBinderService.html":{}}}],["root'},{'name",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/SampleComponentComponent.html":{}}}],["run",{"_index":414,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":365,"title":{},"body":{"dependencies.html":{}}}],["sample",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/SampleComponentComponent.html":{}}}],["samplecomponent",{"_index":293,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["samplecomponentcomponent",{"_index":41,"title":{"components/SampleComponentComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/SampleComponentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sans",{"_index":315,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["see",{"_index":311,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/SampleComponentComponent.html":{}}}],["serif",{"_index":320,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["serve",{"_index":423,"title":{},"body":{"index.html":{}}}],["service",{"_index":375,"title":{},"body":{"index.html":{}}}],["services",{"_index":180,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["set",{"_index":203,"title":{},"body":{"injectables/KeyBinderService.html":{},"components/SampleComponentComponent.html":{}}}],["set(this.state.map((i",{"_index":169,"title":{},"body":{"classes/KeyBinderCore.html":{}}}],["setkeyeventlistner",{"_index":188,"title":{},"body":{"injectables/KeyBinderService.html":{},"index.html":{}}}],["setkeyeventlistner('samplecomponentcomponent",{"_index":302,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["setkeyeventlistner(source",{"_index":200,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["setkeyeventlistnermap",{"_index":189,"title":{},"body":{"injectables/KeyBinderService.html":{},"index.html":{}}}],["setkeyeventlistnermap(data",{"_index":210,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["setting",{"_index":259,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["shortcut",{"_index":131,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{}}}],["shortcuts",{"_index":197,"title":{},"body":{"injectables/KeyBinderService.html":{},"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"interfaces/KeyMapper.html":{},"interfaces/KeyMapperData.html":{},"interfaces/KeyRemoverData.html":{},"components/SampleComponentComponent.html":{},"index.html":{}}}],["spec\\.ts",{"_index":438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specific",{"_index":195,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["src/.../environment.prod.ts",{"_index":434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/sample",{"_index":243,"title":{},"body":{"components/SampleComponentComponent.html":{},"coverage.html":{}}}],["src/app/key",{"_index":95,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"interfaces/KeyMapper.html":{},"interfaces/KeyMapperData.html":{},"interfaces/KeyRemoverData.html":{},"components/SampleComponentComponent.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":340,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":344,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":345,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":370,"title":{"index.html":{}},"body":{}}],["state",{"_index":110,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"index.html":{}}}],["statements",{"_index":324,"title":{},"body":{"coverage.html":{}}}],["store",{"_index":127,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{}}}],["string",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/KeyBinderService.html":{},"interfaces/KeyMapper.html":{},"interfaces/KeyMapperData.html":{},"interfaces/KeyRemoverData.html":{},"components/SampleComponentComponent.html":{},"index.html":{}}}],["structure",{"_index":240,"title":{},"body":{"interfaces/KeyMapper.html":{},"interfaces/KeyMapperData.html":{},"interfaces/KeyRemoverData.html":{}}}],["stuff",{"_index":306,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/SampleComponentComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/SampleComponentComponent.html":{}}}],["super",{"_index":221,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["support",{"_index":392,"title":{},"body":{"index.html":{},"modules.html":{}}}],["supported",{"_index":207,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["supports",{"_index":401,"title":{},"body":{"index.html":{}}}],["svg",{"_index":426,"title":{},"body":{"modules.html":{}}}],["table",{"_index":349,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":348,"title":{},"body":{"coverage.html":{}}}],["talk",{"_index":385,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/SampleComponentComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/SampleComponentComponent.html":{}}}],["this._hotkeysservice.add(new",{"_index":156,"title":{},"body":{"classes/KeyBinderCore.html":{}}}],["this._hotkeysservice.reset",{"_index":165,"title":{},"body":{"classes/KeyBinderCore.html":{}}}],["this.action",{"_index":289,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["this.assign",{"_index":283,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["this.bind",{"_index":222,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["this.callback.bind(this",{"_index":282,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["this.getall",{"_index":233,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["this.keyboardmapper.destroyalleventlisnteners",{"_index":297,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["this.keyboardmapper.getallshortcuts",{"_index":296,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["this.keyboardmapper.setkeyeventlistner('samplecomponentcomponent",{"_index":300,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["this.keyboardmapper.setkeyeventlistnermap",{"_index":304,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["this.keycallbacksample",{"_index":281,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["this.keymap",{"_index":295,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["this.registeredkeys",{"_index":298,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["this.reset",{"_index":299,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["this.setkeyeventlistner(element.source",{"_index":224,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["this.state",{"_index":166,"title":{},"body":{"classes/KeyBinderCore.html":{}}}],["this.state.filter(key",{"_index":173,"title":{},"body":{"classes/KeyBinderCore.html":{}}}],["this.state.push(data",{"_index":159,"title":{},"body":{"classes/KeyBinderCore.html":{}}}],["this.state.splice(this.state.map((i",{"_index":160,"title":{},"body":{"classes/KeyBinderCore.html":{}}}],["this.unbind",{"_index":230,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["this.unbindall",{"_index":231,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["together",{"_index":212,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["trebuchet",{"_index":318,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/SampleComponentComponent.html":{}}}],["true",{"_index":437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tslint:disable",{"_index":284,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["type",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"interfaces/KeyMapper.html":{},"interfaces/KeyMapperData.html":{},"interfaces/KeyRemoverData.html":{},"components/SampleComponentComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":400,"title":{},"body":{"index.html":{}}}],["unbind",{"_index":114,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"interfaces/KeyMapper.html":{},"index.html":{}}}],["unbind(data",{"_index":142,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"interfaces/KeyMapper.html":{},"interfaces/KeyMapperData.html":{},"interfaces/KeyRemoverData.html":{}}}],["unbindall",{"_index":115,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"interfaces/KeyMapper.html":{},"interfaces/KeyMapperData.html":{},"interfaces/KeyRemoverData.html":{},"index.html":{}}}],["updated",{"_index":389,"title":{},"body":{"index.html":{}}}],["used",{"_index":391,"title":{},"body":{"index.html":{}}}],["using",{"_index":209,"title":{},"body":{"injectables/KeyBinderService.html":{}}}],["v",{"_index":175,"title":{},"body":{"classes/KeyBinderCore.html":{},"components/SampleComponentComponent.html":{}}}],["value",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"components/SampleComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/SampleComponentComponent.html":{}}}],["variable",{"_index":341,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["variables",{"_index":432,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variety",{"_index":394,"title":{},"body":{"index.html":{}}}],["very",{"_index":402,"title":{},"body":{"index.html":{}}}],["via",{"_index":303,"title":{},"body":{"components/SampleComponentComponent.html":{}}}],["viewer",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["void",{"_index":148,"title":{},"body":{"classes/KeyBinderCore.html":{},"injectables/KeyBinderService.html":{},"interfaces/KeyMapper.html":{},"interfaces/KeyMapperData.html":{},"interfaces/KeyRemoverData.html":{},"components/SampleComponentComponent.html":{}}}],["wide",{"_index":393,"title":{},"body":{"index.html":{}}}],["wp/documentation",{"_index":413,"title":{},"body":{"index.html":{}}}],["yarn",{"_index":420,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":367,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'app'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'SampleComponentComponent', 'selector': 'app-sample-component'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nSampleComponentComponent\n\nSampleComponentComponent\n\nAppModule -->\n\nSampleComponentComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            SampleComponentComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { SampleComponentComponent } from './components/sample-component/sample-component.component';\nimport {HotkeyModule} from 'angular2-hotkeys';\nimport { NgxJsonViewerModule } from 'ngx-json-viewer';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SampleComponentComponent\n  ],\n  imports: [\n    BrowserModule,\n    NgxJsonViewerModule,\n    HotkeyModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParagraphText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParagraphText\n                        \n                        \n                    \n                \n            \n            \n                \ngetParagraphText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getParagraphText() {\n    return element(by.css('app-root h1')).getText();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KeyBinderCore.html":{"url":"classes/KeyBinderCore.html","title":"class - KeyBinderCore","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KeyBinderCore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/key-binder-core.ts\n        \n\n            \n                Description\n            \n            \n                This is a core class for implementing and interfacing with any key binding library.\n\n            \n\n\n            \n                Implements\n            \n            \n                            KeyMapper\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _hotkeysService\n                            \n                            \n                                    Private\n                                state\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                bind\n                            \n                            \n                                    Public\n                                getAll\n                            \n                            \n                                    Public\n                                unbind\n                            \n                            \n                                    Public\n                                unbindAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/key-binder-core.ts:26\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _hotkeysService\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new HotkeysService({})\n                        \n                    \n                        \n                            \n                                    Defined in src/app/key-binder-core.ts:26\n                            \n                        \n\n                \n                    \n                        This is an instance of the keypress library. This can be changed at any point\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     KeyMapperData[]\n\n                        \n                    \n                    \n                        \n                            Default value : [] as Array\n                        \n                    \n                        \n                            \n                                    Defined in src/app/key-binder-core.ts:18\n                            \n                        \n\n                \n                    \n                        This will store the key binding properties\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            bind\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    bind(data: KeyMapperData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/key-binder-core.ts:38\n                \n            \n\n\n            \n                \n                    This method will bind a new key as a shortcut.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                KeyMapperData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This will contain the data for mapping the key and it's listener\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         KeyBinderCore\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/key-binder-core.ts:78\n                \n            \n\n\n            \n                \n                    This method will return all the key maps\n\n\n                    \n                    \n                    \n                        Returns :         object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            unbind\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unbind(data: KeyRemoverData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/key-binder-core.ts:52\n                \n            \n\n\n            \n                \n                    This method will unbind a new key as a shortcut\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                KeyRemoverData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This will contain the data for mapping the key and it's listener\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         KeyBinderCore\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            unbindAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unbindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/key-binder-core.ts:67\n                \n            \n\n\n            \n                \n                    This method will remove all the key bindings\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { KeyMapper, KeyMapperData, KeyRemoverData } from './key-mapper';\nimport { HotkeysService, Hotkey } from 'angular2-hotkeys';\n/**\n * This is a core class for implementing and interfacing with any key binding library.\n *\n * @export\n * @class KeyBinderCore\n * @implements {KeyMapper}\n */\nexport class KeyBinderCore implements KeyMapper {\n\n  /**\n * This will store the key binding properties\n *\n * @private\n * @memberof KeyBinderCore\n */\n  private state: KeyMapperData[] = [] as Array;\n\n  /**\n   * This is an instance of the keypress library. This can be changed at any point\n   *\n   * @private\n   * @memberof KeyBinderCore\n   */\n  private _hotkeysService = new HotkeysService({});\n\n  constructor() {\n\n  }\n  /**\n   * This method will bind a new key as a shortcut.\n   *\n   * @param {KeyMapperData} data This will contain the data for mapping the key and it's listener\n   * @returns {KeyBinderCore}\n   * @memberof KeyBinderCore\n   */\n  public bind(data: KeyMapperData): KeyBinderCore {\n    console.log(`Registering '${data.key}' from '${data.source}'`);\n    this._hotkeysService.add(new Hotkey(data.key, data.listener));\n    this.state.push(data);\n    return this;\n  }\n\n  /**\n   * This method will unbind a new key as a shortcut\n   *\n   * @param {KeyRemoverData} data This will contain the data for mapping the key and it's listener\n   * @returns {KeyBinderCore}\n   * @memberof KeyBinderCore\n   */\n  public unbind(data: KeyRemoverData): KeyBinderCore {\n    this.state.splice(this.state.map((i: KeyMapperData) => {\n      if (data.source === i.source) {\n        return i.key;\n      }\n    }).indexOf(data.key), 1);\n\n    return this;\n  }\n\n  /**\n   * This method will remove all the key bindings\n   *\n   * @memberof KeyBinderCore\n   */\n  public unbindAll(): void {\n    this._hotkeysService.reset();\n    this.state = [];\n  }\n\n  /**\n   * This method will return all the key maps\n   *\n   * @returns {object}\n   * @memberof KeyBinderCore\n   */\n  public getAll(): object {\n    const components = Array.from(new Set(this.state.map((i: KeyMapperData) => i.source)));\n    const result = {};\n    components.map((v, k) => {\n      result[v] = this.state.filter(key => key.source === v);\n    });\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KeyBinderService.html":{"url":"injectables/KeyBinderService.html","title":"injectable - KeyBinderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  KeyBinderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/key-binder.service.ts\n        \n\n            \n                Description\n            \n            \n                This services provides an angular instance which interfaces with the @class KeyBinderCore class\n\n            \n\n            \n                Extends\n            \n            \n                        KeyBinderCore\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _hotkeysService\n                            \n                            \n                                    Private\n                                state\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroyAllEventLisnteners\n                            \n                            \n                                destroyKeyEventListener\n                            \n                            \n                                getAllShortcuts\n                            \n                            \n                                setKeyEventListner\n                            \n                            \n                                setKeyEventListnerMap\n                            \n                            \n                                    Public\n                                bind\n                            \n                            \n                                    Public\n                                getAll\n                            \n                            \n                                    Public\n                                unbind\n                            \n                            \n                                    Public\n                                unbindAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/key-binder.service.ts:15\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroyAllEventLisnteners\n                        \n                        \n                    \n                \n            \n            \n                \ndestroyAllEventLisnteners()\n                \n            \n\n\n            \n                \n                    Defined in src/app/key-binder.service.ts:71\n                \n            \n\n\n            \n                \n                    Removes all key bindings\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroyKeyEventListener\n                        \n                        \n                    \n                \n            \n            \n                \ndestroyKeyEventListener(key: string, source: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/key-binder.service.ts:61\n                \n            \n\n\n            \n                \n                    Removes a specific key binding\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    source\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         KeyBinderService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllShortcuts\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllShortcuts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/key-binder.service.ts:85\n                \n            \n\n\n            \n                \n                    Returns all the shortcuts in a custom objects\n\n\n                    \n                    \n                    \n                        Returns :         object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setKeyEventListner\n                        \n                        \n                    \n                \n            \n            \n                \nsetKeyEventListner(source: string, type: string, key: string, listener: any, options: object, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/key-binder.service.ts:32\n                \n            \n\n\n            \n                \n                    This will set the key binding by the component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The component from where it originates\n\n                                    \n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The type of method\n\n                                    \n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The key for the shortcut\n\n                                    \n                                \n                                \n                                    listener\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The callback on the key press\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                    \n                                        Options supported by EventListeners\n\n                                    \n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                    \n                                        Description for using it with other components\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         KeyBinderService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setKeyEventListnerMap\n                        \n                        \n                    \n                \n            \n            \n                \nsetKeyEventListnerMap(data: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/key-binder.service.ts:46\n                \n            \n\n\n            \n                \n                    This will set the key binding by the component together as a set\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         KeyBinderService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            bind\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    bind(data: KeyMapperData)\n                \n            \n\n\n            \n                \n                    Inherited from         KeyBinderCore\n\n                \n            \n            \n                \n                        Defined in         KeyBinderCore:38\n\n                \n            \n\n\n            \n                \n                    This method will bind a new key as a shortcut.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                KeyMapperData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This will contain the data for mapping the key and it's listener\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         KeyBinderCore\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Inherited from         KeyBinderCore\n\n                \n            \n            \n                \n                        Defined in         KeyBinderCore:78\n\n                \n            \n\n\n            \n                \n                    This method will return all the key maps\n\n\n                    \n                    \n                    \n                        Returns :         object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            unbind\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unbind(data: KeyRemoverData)\n                \n            \n\n\n            \n                \n                    Inherited from         KeyBinderCore\n\n                \n            \n            \n                \n                        Defined in         KeyBinderCore:52\n\n                \n            \n\n\n            \n                \n                    This method will unbind a new key as a shortcut\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                KeyRemoverData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This will contain the data for mapping the key and it's listener\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         KeyBinderCore\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            unbindAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unbindAll()\n                \n            \n\n\n            \n                \n                    Inherited from         KeyBinderCore\n\n                \n            \n            \n                \n                        Defined in         KeyBinderCore:67\n\n                \n            \n\n\n            \n                \n                    This method will remove all the key bindings\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _hotkeysService\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new HotkeysService({})\n                        \n                    \n                            \n                                \n                                    Inherited from         KeyBinderCore\n\n                                \n                            \n                        \n                            \n                                    Defined in         KeyBinderCore:26\n\n                            \n                        \n\n                \n                    \n                        This is an instance of the keypress library. This can be changed at any point\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     KeyMapperData[]\n\n                        \n                    \n                    \n                        \n                            Default value : [] as Array\n                        \n                    \n                            \n                                \n                                    Inherited from         KeyBinderCore\n\n                                \n                            \n                        \n                            \n                                    Defined in         KeyBinderCore:18\n\n                            \n                        \n\n                \n                    \n                        This will store the key binding properties\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { KeyBinderCore } from './key-binder-core';\nimport { KeyMapperData } from './key-mapper';\n\n/**\n * This services provides an angular instance which interfaces with the @class KeyBinderCore class\n *\n * @export\n * @class KeyBinderService\n * @extends {KeyBinderCore}\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class KeyBinderService extends KeyBinderCore {\n  constructor() {\n    super();\n  }\n\n  /**\n   * This will set the key binding by the component\n   *\n   * @param {string} source The component from where it originates\n   * @param {string} type The type of method\n   * @param {string} key The key for the shortcut\n   * @param {*} listener The callback on the key press\n   * @param {object} [options={}] Options supported by EventListeners\n   * @param {string} [description=''] Description for using it with other components\n   * @returns {KeyBinderService}\n   * @memberof KeyBinderService\n   */\n  setKeyEventListner(\n    source: string, type: string, key: string, listener: any, options: object = {}, description: string = ''): KeyBinderService {\n    this.bind({ source, type, key, listener, options, description } as KeyMapperData);\n    return this;\n  }\n\n\n  /**\n   * This will set the key binding by the component together as a set\n   *\n   * @param {Array} data\n   * @returns {KeyBinderService}\n   * @memberof KeyBinderService\n   */\n  setKeyEventListnerMap(data: Array): KeyBinderService {\n    data.forEach((element: KeyMapperData) => {\n      this.setKeyEventListner(element.source, element.type, element.key, element.listener, element.options, element.description);\n    });\n    return this;\n  }\n\n  /**\n   * Removes a specific key binding\n   *\n   * @param {string} key\n   * @param {string} source\n   * @returns {KeyBinderService}\n   * @memberof KeyBinderService\n   */\n  destroyKeyEventListener(key: string, source: string): KeyBinderService {\n    this.unbind({ key, source });\n    return this;\n  }\n\n  /**\n   * Removes all key bindings\n   *\n   * @memberof KeyBinderService\n   */\n  destroyAllEventLisnteners() {\n    this.unbindAll();\n  }\n\n  /**\n   * Returns all the shortcuts in a custom objects\n   * @json\n   * component = {\n   *   description, key, etc...\n   * }\n   *\n   * @returns {object}\n   * @memberof KeyBinderService\n   */\n  getAllShortcuts(): object {\n    return this.getAll();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/KeyMapper.html":{"url":"interfaces/KeyMapper.html","title":"interface - KeyMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  KeyMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/key-mapper.ts\n        \n\n            \n                Description\n            \n            \n                This interface provides the method definitions for the KeyBinderCore class\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    bind\n                                \n                                \n                                    unbind\n                                \n                                \n                                    unbindAll\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bind\n                        \n                        \n                    \n                \n            \n            \n                \nbind(data: KeyMapperData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/key-mapper.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                KeyMapperData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         KeyBinderCore\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unbind\n                        \n                        \n                    \n                \n            \n            \n                \nunbind(data: KeyMapperData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/key-mapper.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                KeyMapperData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         KeyBinderCore\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unbindAll\n                        \n                        \n                    \n                \n            \n            \n                \nunbindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/key-mapper.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { KeyBinderCore } from \"./key-binder-core\";\n\n\n/**\n * This interface provides the method definitions for the KeyBinderCore class\n *\n * @export\n * @interface KeyMapper\n */\nexport interface KeyMapper {\n  bind(data: KeyMapperData): KeyBinderCore;\n  unbind(data: KeyMapperData): KeyBinderCore;\n  unbindAll(): void;\n}\n\n\n/**\n * This interface provides the structure for individual key mapping\n *\n * @export\n * @interface KeyMapperData\n */\nexport interface KeyMapperData {\n  source: string;\n  key: string;\n  type: string;\n  listener: any;\n  options?: object;\n  description?: string;\n}\n\n\n/**\n * This interface provides the structure for individual key mapping which are to be removed\n *\n * @export\n * @interface KeyRemoverData\n */\nexport interface KeyRemoverData {\n  key: string;\n  source: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/KeyMapperData.html":{"url":"interfaces/KeyMapperData.html","title":"interface - KeyMapperData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  KeyMapperData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/key-mapper.ts\n        \n\n            \n                Description\n            \n            \n                This interface provides the structure for individual key mapping\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                        key\n                                \n                                \n                                        listener\n                                \n                                \n                                            Optional\n                                        options\n                                \n                                \n                                        source\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listener\n                                    \n                                \n                                \n                                    \n                                        listener:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { KeyBinderCore } from \"./key-binder-core\";\n\n\n/**\n * This interface provides the method definitions for the KeyBinderCore class\n *\n * @export\n * @interface KeyMapper\n */\nexport interface KeyMapper {\n  bind(data: KeyMapperData): KeyBinderCore;\n  unbind(data: KeyMapperData): KeyBinderCore;\n  unbindAll(): void;\n}\n\n\n/**\n * This interface provides the structure for individual key mapping\n *\n * @export\n * @interface KeyMapperData\n */\nexport interface KeyMapperData {\n  source: string;\n  key: string;\n  type: string;\n  listener: any;\n  options?: object;\n  description?: string;\n}\n\n\n/**\n * This interface provides the structure for individual key mapping which are to be removed\n *\n * @export\n * @interface KeyRemoverData\n */\nexport interface KeyRemoverData {\n  key: string;\n  source: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/KeyRemoverData.html":{"url":"interfaces/KeyRemoverData.html","title":"interface - KeyRemoverData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  KeyRemoverData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/key-mapper.ts\n        \n\n            \n                Description\n            \n            \n                This interface provides the structure for individual key mapping which are to be removed\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                                \n                                        source\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { KeyBinderCore } from \"./key-binder-core\";\n\n\n/**\n * This interface provides the method definitions for the KeyBinderCore class\n *\n * @export\n * @interface KeyMapper\n */\nexport interface KeyMapper {\n  bind(data: KeyMapperData): KeyBinderCore;\n  unbind(data: KeyMapperData): KeyBinderCore;\n  unbindAll(): void;\n}\n\n\n/**\n * This interface provides the structure for individual key mapping\n *\n * @export\n * @interface KeyMapperData\n */\nexport interface KeyMapperData {\n  source: string;\n  key: string;\n  type: string;\n  listener: any;\n  options?: object;\n  description?: string;\n}\n\n\n/**\n * This interface provides the structure for individual key mapping which are to be removed\n *\n * @export\n * @interface KeyRemoverData\n */\nexport interface KeyRemoverData {\n  key: string;\n  source: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SampleComponentComponent.html":{"url":"components/SampleComponentComponent.html","title":"component - SampleComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SampleComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/sample-component/sample-component.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sample-component\n            \n\n            \n                styleUrls\n                ./sample-component.component.css\n            \n\n\n\n            \n                templateUrl\n                ./sample-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                keyCallbackSample\n                            \n                            \n                                keyMap\n                            \n                            \n                                registeredKeys\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                assign\n                            \n                            \n                                callback\n                            \n                            \n                                getKeys\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(keyboardMapper: KeyBinderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/sample-component/sample-component.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        keyboardMapper\n                                                  \n                                                        \n                                                                        KeyBinderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            assign\n                        \n                        \n                    \n                \n            \n            \n                \nassign()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/sample-component/sample-component.component.ts:66\n                \n            \n\n\n            \n                \n                    Setting multiple key listeners\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            callback\n                        \n                        \n                    \n                \n            \n            \n                \ncallback(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/sample-component/sample-component.component.ts:33\n                \n            \n\n\n            \n                \n                    Component method callback\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getKeys\n                        \n                        \n                    \n                \n            \n            \n                \ngetKeys()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/sample-component/sample-component.component.ts:44\n                \n            \n\n\n            \n                \n                    Get all binding map\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/sample-component/sample-component.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/sample-component/sample-component.component.ts:54\n                \n            \n\n\n            \n                \n                    Destroy all key listeners\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            action\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'No key pressed yet!'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/sample-component/sample-component.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keyCallbackSample\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/sample-component/sample-component.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keyMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/sample-component/sample-component.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registeredKeys\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : ['v', 'a', 'b', 'd', 'e', 'g', 'm']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/sample-component/sample-component.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { KeyBinderService } from 'src/app/key-binder.service';\nimport { HotkeysService, Hotkey } from 'angular2-hotkeys';\nimport { KeyMapperData } from 'src/app/key-mapper';\n\n@Component({\n  selector: 'app-sample-component',\n  templateUrl: './sample-component.component.html',\n  styleUrls: ['./sample-component.component.css']\n})\nexport class SampleComponentComponent implements OnInit {\n\n  action = 'No key pressed yet!';\n  registeredKeys: Array = ['v', 'a', 'b', 'd', 'e', 'g', 'm'];\n  keyCallbackSample;\n  keyMap: object = {};\n\n  constructor(private keyboardMapper: KeyBinderService) {\n    this.keyCallbackSample = this.callback.bind(this);\n  }\n\n  ngOnInit() {\n    this.assign();\n  }\n\n  /**\n   *\n   * Component method callback\n   * @param {*} data\n   * @returns {boolean}\n   * @memberof SampleComponentComponent\n   */\n  callback(data: any): boolean {\n    // tslint:disable-next-line: max-line-length\n    this.action = 'Pressed ' + data['key'] + ' and propogated to keyCallbackSample() method inside the SampleComponent';\n    return false;\n  }\n\n  /**\n   *\n   * Get all binding map\n   * @memberof SampleComponentComponent\n   */\n  getKeys(): void {\n    this.keyMap = this.keyboardMapper.getAllShortcuts();\n  }\n\n\n  /**\n   * Destroy all key listeners\n   *\n   * @memberof SampleComponentComponent\n   */\n  reset(): void {\n    this.keyboardMapper.destroyAllEventLisnteners();\n    this.action = 'No key pressed yet!';\n    this.registeredKeys = [];\n    this.keyMap = {};\n  }\n\n  /**\n   *\n   * Setting multiple key listeners\n   * @memberof SampleComponentComponent\n   */\n  assign(): void {\n    this.reset();\n    this.keyboardMapper.setKeyEventListner('SampleComponentComponent', 'keydown', 'v', this.keyCallbackSample)\n      .setKeyEventListner('SampleComponentComponent', 'keydown', 'a', this.keyCallbackSample)\n      .setKeyEventListner('SampleComponentComponent', 'keydown', 'b', this.keyCallbackSample)\n      .setKeyEventListner('SampleComponentComponent', 'keydown', 'd', this.keyCallbackSample)\n      .setKeyEventListner('SampleComponentComponent', 'keydown', 'e', this.keyCallbackSample);\n\n\n    // Set key listeners via a map\n    this.keyboardMapper.setKeyEventListnerMap([{\n      source: 'SampleComponentComponent',\n      key: 'g',\n      type: 'keydown',\n      listener: this.keyCallbackSample,\n      options: {},\n      description: 'Some random stuff'\n    },\n    {\n      source: 'SampleComponentComponent',\n      key: 'm',\n      type: 'keydown',\n      listener: this.keyCallbackSample,\n      options: {},\n      description: 'Some random stuff'\n    }] as Array);\n\n    this.registeredKeys = ['v', 'a', 'b', 'd', 'e', 'g', 'm'];\n\n  }\n}\n\n    \n\n    \n        \n  Get key bindings\n  Assign default\n  Reset\n\n\n  \n    No keys registered\n  \n  \n    Hit any of these keys below to see the result\n  \n  \n    \n      {{ k }},\n    \n  \n  \n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./sample-component.component.css\n                \n                * {\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Get key bindings  Assign default  Reset      No keys registered        Hit any of these keys below to see the result              {{ k }},                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'SampleComponentComponent', 'selector': 'app-sample-component'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SampleComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/sample-component/sample-component.component.ts\n            \n            component\n            SampleComponentComponent\n            \n                36 %\n                (4/11)\n            \n        \n        \n            \n                \n                src/app/key-binder-core.ts\n            \n            class\n            KeyBinderCore\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/key-binder.service.ts\n            \n            injectable\n            KeyBinderService\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                src/app/key-mapper.ts\n            \n            interface\n            KeyMapper\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/key-mapper.ts\n            \n            interface\n            KeyMapperData\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/key-mapper.ts\n            \n            interface\n            KeyRemoverData\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.3\n        \n            @angular/common : ^6.0.3\n        \n            @angular/compiler : ^6.0.3\n        \n            @angular/core : ^6.0.3\n        \n            @angular/forms : ^6.0.3\n        \n            @angular/http : ^6.0.3\n        \n            @angular/platform-browser : ^6.0.3\n        \n            @angular/platform-browser-dynamic : ^6.0.3\n        \n            @angular/router : ^6.0.3\n        \n            angular2-hotkeys : ^2.1.4\n        \n            core-js : ^2.5.4\n        \n            express : ^4.17.1\n        \n            ngx-json-viewer : ^2.4.0\n        \n            rxjs : ^6.4.0\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgKeypressWp\nArchitecture\nThe keyBinderCore class holds the interfacing methods with any other key binding library. \nThe keyBinderService exposes a service to all the components at the module level to assign shortcuts.\nExposed Methods\nkeyBinderCore\nThe core exposes the following methods. This will call the binding libraries methods internally\njavascript\nbind()\nunbind()\nunbindAll()\ngetAll()\nkeyBinderService\nThe application interfacing methods will be provided by this service which will talk to the core class's methods.\njavascript\nsetKeyEventListner()\nsetKeyEventListnerMap()\ndestroyKeyEventListener()\ndestroyAllEventLisnteners()\ngetAllShortcuts()\nTo change the key binding library, the core methods will need to be updated. The current library used does not support a wide variety of actions on key bindings so the type is not considered. Although the Core layer has support to pass types to any other library which supports it.\nThe key binding library used is angular2-hotkeys which is very minimal\nState\nTo fetch all the shortcuts, the core maintains a state variable which will return the keyboard mappings in the format below\njavascript\n  component: [{\n    source: string,\n    key: string,\n    type: string,\n    listener: any,\n    options: object,\n    description: string,\n  }]\nDemo:\nhttps://keybinder.herokuapp.com/\nDocumentation:\nhttps://dark-blaze.github.io/ng-keypress-wp/documentation/\nTo run it locally:\n\nClone the project\nExecute npm i or yarn install\nExecute ng serve\nOpen http://localhost:4200/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nSampleComponentComponent\n\nSampleComponentComponent\n\nAppModule -->\n\nSampleComponentComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
